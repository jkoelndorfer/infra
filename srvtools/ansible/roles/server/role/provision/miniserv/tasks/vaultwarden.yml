---

- name: lookup vaultwarden docker image
  shell:
    cmd: 'printf "$(< "$DOCKER_IMAGE_FILE")"'
    executable: /bin/bash
  environment:
    DOCKER_IMAGE_FILE: "{{ metadata_dir }}/vaultwarden-docker-image"
  register: vaultwarden_image_lookup
  changed_when: false
  tags: [vaultwarden]

- name: set vaultwarden_docker_image from lookup
  set_fact:
    vaultwarden_docker_image: "{{ vaultwarden_image_lookup.stdout.rstrip() }}"
  tags: [vaultwarden]

- name: create vaultwarden group
  group:
    name: vaultwarden
    gid:  "{{ vaultwarden_gid }}"
  tags: [vaultwarden]

- name: create vaultwarden user
  user:
    name:    vaultwarden
    uid:     "{{ vaultwarden_uid }}"
    comment: vaultwarden service
    group:   vaultwarden
    shell:   "{{ nologin_shell }}"
  tags: [vaultwarden]

- name: create vaultwarden data directory
  file:
    path:  "{{ vaultwarden_data_dir }}"
    state: directory
    owner: root
    group: vaultwarden
    mode:  0770
  tags: [vaultwarden]

- name: start vaultwarden container
  docker_container:
    name:       "vaultwarden"
    image:      "{{ vaultwarden_docker_image }}"
    log_driver: journald
    log_options:
      tag: vaultwarden
    env:
      # Credential used to log into the admin page.
      # If this is unset, the admin page is disabled.
      #
      # ADMIN_TOKEN: "{{ lookup('pipe', 'base64 /dev/urandom | head -c64') }}"

      # DOMAIN:      "{{ vaultwarden_domain }}"

      # We have to make the port a non-privileged port because we're running as
      # an unprivileged user.
      ROCKET_PORT:        "8080"
      SIGNUPS_ALLOWED:    "false"
      SHOW_PASSWORD_HINT: "false"
      WEBSOCKET_ENABLED:  "true"
    networks:
      - name: swag_vaultwarden
    security_opts:
      - "seccomp:unconfined"
    published_ports:
      - "{{ vaultwarden_port }}:8080"
    volumes:
      - "{{ vaultwarden_data_dir }}:/data"
    user: "{{ vaultwarden_uid }}:{{ vaultwarden_gid }}"
    restart_policy: unless-stopped
  tags: [vaultwarden]
