---

# This playbook is invoked at runtime on an EC2 instance to perform the last
# few provisioning tasks. The heavy lifting should be done in build-image.yml.

- name: gather ec2 facts
  hosts: all
  tasks:
    - name: set facts (local testing)
      set_fact:
        admin_username:        localtestadmin
        admin_ssh_pubkey:      "{{ local_testing_admin_ssh_pubkey }}"
        ec2_availability_zone: us-east-1a
        ec2_region:            us-east-1
        ec2_tags:              {}
        instance_category:     "{{ instance_category | default('testing') }}"
        instance_class:        "{{ instance_category | default('localtesting') }}"
        instance_env:          "{{ instance_env | default('dev') }}"
        # randomly generated (real looking) ec2 instance ID
        instance_id:           i-0febee66103987423
        instance_name:         dev-local-test
      when: local_testing
      tags: always

    - name: gather ec2 metadata facts
      ec2_metadata_facts:
      when: not local_testing
      tags: always

    - name: set facts
      set_fact:
        admin_username:        "{{ lookup('aws_ssm', '/provision/common/user', region=ansible_ec2_placement_region) }}"
        admin_ssh_pubkey:      "{{ lookup('aws_ssm', '/provision/common/ssh_pubkey', region=ansible_ec2_placement_region) }}"
        ec2_availability_zone: "{{ ansible_ec2_placement_availability_zone }}"
        ec2_region:            "{{ ansible_ec2_placement_region }}"
        instance_category:     "{{ lookup('env', 'INSTANCE_CATEGORY') }}"
        instance_class:        "{{ lookup('env', 'INSTANCE_CLASS') }}"
        instance_env:          "{{ lookup('env', 'INSTANCE_ENV') }}"
        instance_id:           "{{ ansible_ec2_instance_identity_document_instanceid }}"
        instance_name:         "{{ lookup('env', 'INSTANCE_NAME') }}"
      when: not local_testing
      tags: always

- name: provision ec2 instance
  hosts: all
  become: yes
  become_user: root
  roles:
    - { role: cloudcore, tags: ['cloudcore'] }
    - { role: cloudclass, tags: ['cloudclass'] }
